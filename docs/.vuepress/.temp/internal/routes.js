export const redirects = JSON.parse("{}")

export const routes = Object.fromEntries([
  ["/", { loader: () => import(/* webpackChunkName: "index.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/index.html.js"), meta: {"title":"首页"} }],
  ["/posts/api.html", { loader: () => import(/* webpackChunkName: "api.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/api.html.js"), meta: {"_blog":{"title":"登录api","author":"","date":"2024-04-03T00:00:00.000Z","category":["接口"],"tag":["api"],"excerpt":"<div class=\"language-php\" data-ext=\"php\" data-title=\"php\"><pre class=\"language-php\"><code><span class=\"token comment\">//登录API</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Request</span> <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$username</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">param</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'login_act'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">param</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'login_pwd'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$info</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">UserModel</span><span class=\"token operator\">::</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'login_act'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'用户不存在'</span><span class=\"token punctuation\">,</span><span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'login_pwd'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'账号或密码错误'</span><span class=\"token punctuation\">,</span><span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'api123456'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$payload</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n            <span class=\"token string single-quoted-string\">'iss'</span><span class=\"token operator\">=&gt;</span><span class=\"token string double-quoted-string\">\"http://www.api.io\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'aud'</span><span class=\"token operator\">=&gt;</span><span class=\"token string double-quoted-string\">\"http://www.api.io\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'iat'</span><span class=\"token operator\">=&gt;</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'nbf'</span><span class=\"token operator\">=&gt;</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'aid'</span><span class=\"token operator\">=&gt;</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$token</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">JWT</span><span class=\"token operator\">::</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"HS256\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n            <span class=\"token string single-quoted-string\">'data'</span><span class=\"token operator\">=&gt;</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'msg'</span><span class=\"token operator\">=&gt;</span><span class=\"token string single-quoted-string\">'登录成功！'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'code'</span><span class=\"token operator\">=&gt;</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'token'</span><span class=\"token operator\">=&gt;</span><span class=\"token variable\">$token</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>"},"title":"登录api"} }],
  ["/posts/archive1.html", { loader: () => import(/* webpackChunkName: "archive1.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/archive1.html.js"), meta: {"_blog":{"title":"异常处理","author":"","date":"2024-04-10T00:00:00.000Z","category":["处理"],"tag":["处理"],"excerpt":"<div class=\"language-php\" data-ext=\"php\" data-title=\"php\"><pre class=\"language-php\"><code>如果你想更改异常页面的样式、布局之类的，可以修改这个页面：\nvendor<span class=\"token operator\">/</span>topthink<span class=\"token operator\">/</span>framework<span class=\"token operator\">/</span>src<span class=\"token operator\">/</span>tpl<span class=\"token operator\">/</span>think_exception<span class=\"token operator\">.</span>tpl\n<span class=\"token number\">3.</span> 如果你想要直接替换掉异常页面，换成别的，可以在 app<span class=\"token operator\">.</span>php 中进行设置：\n<span class=\"token comment\">// 异常页面的模板文件</span>\n<span class=\"token string single-quoted-string\">'exception_tmpl'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">app</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getThinkPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'tpl/think_exception.tpl'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.</span> 系统的异常抛出是自动进行的，并不需要你手动抛出，但也支持手动；\n<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'异常消息'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10086</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">5.</span> 我们可以使用 <span class=\"token keyword\">try</span><span class=\"token operator\">...</span><span class=\"token keyword\">catch</span> 对可能发生的异常进行手动捕获或抛出；\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">echo</span> <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ErrorException</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'发生错误：'</span><span class=\"token operator\">.</span><span class=\"token variable\">$e</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token number\">6.</span> 我们可以抛出 <span class=\"token constant\">HTTP</span> 异常，所谓 <span class=\"token constant\">HTTP</span> 异常比如 <span class=\"token number\">404</span> 错误，<span class=\"token number\">500</span> 错误之类；\n<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpException</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'页面不存在'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">7.</span> 系统提供了一个助手函数 <span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法简化 <span class=\"token constant\">HTTP</span> 异常抛出；\n<span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'页面不存在'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">8.</span> 如果系统关闭了调试模式，进入部署环境下，可以设置 <span class=\"token constant\">HTTP</span> 错误页面，比如 <span class=\"token number\">404</span>；\n<span class=\"token string single-quoted-string\">'http_exception_template'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">[</span>\n<span class=\"token comment\">// 定义 404 错误的模板文件地址</span>\n<span class=\"token number\">404</span> <span class=\"token operator\">=&gt;</span> <span class=\"token class-name class-name-fully-qualified static-context\"><span class=\"token punctuation\">\\</span>think<span class=\"token punctuation\">\\</span>facade<span class=\"token punctuation\">\\</span>App</span><span class=\"token operator\">::</span><span class=\"token function\">getAppPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'404.html'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>"},"title":"异常处理"} }],
  ["/posts/archive2.html", { loader: () => import(/* webpackChunkName: "archive2.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/archive2.html.js"), meta: {"_blog":{"title":"日志处理","author":"","date":"2024-04-10T00:00:00.000Z","category":["处理"],"tag":["处理"],"excerpt":"<div class=\"language-php\" data-ext=\"php\" data-title=\"php\"><pre class=\"language-php\"><code>在 config 目录下的 log<span class=\"token operator\">.</span>php 配置文件，用于设置日志信息；\n系统提供了不同日志级别，默认 info 级别，从低到高排列如下：\ndebug<span class=\"token operator\">/</span>info<span class=\"token operator\">/</span>notice<span class=\"token operator\">/</span>warning<span class=\"token operator\">/</span>error<span class=\"token operator\">/</span>critical<span class=\"token operator\">/</span>alert<span class=\"token operator\">/</span>emergency<span class=\"token operator\">/</span>sql；\n使用 <span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法，记录一条测试日志；\n<span class=\"token class-name static-context\">Log</span><span class=\"token operator\">::</span><span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'测试日志！'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法不是实时记录，需要等待程序完毕后决定是否写入日志；\n如果在写入方法后添加 <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>关闭写入，那么 <span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法则不写入；\n<span class=\"token class-name static-context\">Log</span><span class=\"token operator\">::</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n系统还提供了一个 <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法，进行时时写入，不理会其它限制；\n<span class=\"token class-name static-context\">Log</span><span class=\"token operator\">::</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'测试日志信息'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n 系统发生异常后，会自动写入 error 日志，如果你想手动也可以；\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">echo</span> <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ErrorException</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'发生错误：'</span><span class=\"token operator\">.</span><span class=\"token variable\">$e</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name static-context\">Log</span><span class=\"token operator\">::</span><span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'被除数不得为零'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"},"title":"日志处理"} }],
  ["/posts/article1.html", { loader: () => import(/* webpackChunkName: "article1.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/article1.html.js"), meta: {"_blog":{"title":"查询接口","author":"","date":"2024-04-10T00:00:00.000Z","category":["接口"],"tag":["api"],"excerpt":"<div class=\"language-php\" data-ext=\"php\" data-title=\"php\"><pre class=\"language-php\"><code><span class=\"token comment\">#查询</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        \n        <span class=\"token comment\">//获取数据</span>\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">UserModel</span><span class=\"token operator\">::</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'数据不存在！'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">204</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'请求数据成功！'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>"},"title":"查询接口"} }],
  ["/posts/article10.html", { loader: () => import(/* webpackChunkName: "article10.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/article10.html.js"), meta: {"_blog":{"title":"","author":"","date":"2024-04-12T00:00:00.000Z","category":["打包"],"tag":["vue项目打包"],"excerpt":"<p>输入命令 : yarn build\n或者 npm run build\n或者 pnmp build</p>\n<p>会在项目目录自动生成 dist 文件夹</p>\n"},"title":""} }],
  ["/posts/article11.html", { loader: () => import(/* webpackChunkName: "article11.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/article11.html.js"), meta: {"_blog":{"title":"","author":"","date":null,"category":[],"tag":[],"excerpt":""},"title":""} }],
  ["/posts/article12.html", { loader: () => import(/* webpackChunkName: "article12.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/article12.html.js"), meta: {"_blog":{"title":"","author":"","date":null,"category":[],"tag":[],"excerpt":""},"title":""} }],
  ["/posts/article2.html", { loader: () => import(/* webpackChunkName: "article2.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/article2.html.js"), meta: {"_blog":{"title":"模糊查询接口","author":"","date":"2024-04-10T00:00:00.000Z","category":["接口"],"tag":["api"],"excerpt":"<div class=\"language-php\" data-ext=\"php\" data-title=\"php\"><pre class=\"language-php\"><code><span class=\"token comment\">#模糊查询</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">read</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//获取单一数据</span>\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">UserModel</span><span class=\"token operator\">::</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//判断id是否是整型（合不合法）</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name static-context\">Validate</span><span class=\"token operator\">::</span><span class=\"token function\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'id参数不合法'</span><span class=\"token punctuation\">,</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'查询失败~'</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'查询成功~'</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>"},"title":"模糊查询接口"} }],
  ["/posts/article3.html", { loader: () => import(/* webpackChunkName: "article3.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/article3.html.js"), meta: {"_blog":{"title":"新增接口","author":"","date":"2024-04-10T00:00:00.000Z","category":["接口"],"tag":["api"],"excerpt":"<div class=\"language-php\" data-ext=\"php\" data-title=\"php\"><pre class=\"language-php\"><code><span class=\"token comment\">#新增</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Request</span> <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//获取表单所填数据</span>\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">param</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//验证返回</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">//验证</span>\n            <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">UserValidate</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ValidateException</span> <span class=\"token variable\">$exception</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$exception</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//密码加密</span>\n        <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'login_pwd'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">sha1</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'login_pwd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//写入数据并返回id</span>\n        <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">UserModel</span><span class=\"token operator\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'添加失败'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'添加成功'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>"},"title":"新增接口"} }],
  ["/posts/article4.html", { loader: () => import(/* webpackChunkName: "article4.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/article4.html.js"), meta: {"_blog":{"title":"删除接口","author":"","date":"2024-04-10T00:00:00.000Z","category":["接口"],"tag":["api"],"excerpt":"<div class=\"language-php\" data-ext=\"php\" data-title=\"php\"><pre class=\"language-php\"><code><span class=\"token comment\">#删除</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//判断id是否是整型（合不合法）</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name static-context\">Validate</span><span class=\"token operator\">::</span><span class=\"token function\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'id参数不合法'</span><span class=\"token punctuation\">,</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//删除数据</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name static-context\">UserModel</span><span class=\"token operator\">::</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'删除成功~'</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>Error</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'删除失败~'</span><span class=\"token punctuation\">,</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>"},"title":"删除接口"} }],
  ["/posts/article5.html", { loader: () => import(/* webpackChunkName: "article5.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/article5.html.js"), meta: {"_blog":{"title":"修改接口","author":"","date":"2024-04-10T00:00:00.000Z","category":["接口"],"tag":["api"],"excerpt":"<div class=\"language-php\" data-ext=\"php\" data-title=\"php\"><pre class=\"language-php\"><code><span class=\"token comment\">#修改</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Request</span> <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        \n        <span class=\"token comment\">//获取数据</span>\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">param</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//验证数据</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//验证</span>\n            <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">UserValidate</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">scene</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'edit'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ValidateException</span> <span class=\"token variable\">$exception</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$exception</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//修改数据写入</span>\n        <span class=\"token variable\">$editedObj</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">UserModel</span><span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$editedObj</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$editedObj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'修改失败~~'</span><span class=\"token punctuation\">,</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$editedObj</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'修改成功~~'</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>"},"title":"修改接口"} }],
  ["/posts/article6.html", { loader: () => import(/* webpackChunkName: "article6.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/article6.html.js"), meta: {"_blog":{"title":"规则验证器","author":"","date":"2024-04-10T00:00:00.000Z","category":["验证器"],"tag":["api"],"excerpt":"<div class=\"language-php\" data-ext=\"php\" data-title=\"php\"><pre class=\"language-php\"><code>#创建验证器--在根目录下创建validate（在此目录下创建user类）\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">declare</span> <span class=\"token punctuation\">(</span>strict_types <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">app<span class=\"token punctuation\">\\</span>validate</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>Validate</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Validate</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token doc-comment comment\">/**\n     * 定义验证规则\n     * 格式：'字段名' =&gt;  ['规则1','规则2'...]\n     *\n     * <span class=\"token keyword\">@var</span> <span class=\"token class-name\"><span class=\"token keyword\">array</span></span>\n     */</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$rule</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'email'</span><span class=\"token operator\">=&gt;</span><span class=\"token string single-quoted-string\">'require|unique:user'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'login_pwd|密码'</span><span class=\"token operator\">=&gt;</span><span class=\"token string single-quoted-string\">'require|min:6'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'login_act|账号'</span><span class=\"token operator\">=&gt;</span><span class=\"token string single-quoted-string\">'require|unique:user'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'name|姓名'</span><span class=\"token operator\">=&gt;</span><span class=\"token string single-quoted-string\">'require'</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * 定义错误信息\n     * 格式：'字段名.规则名' =&gt;  '错误信息'\n     *\n     * <span class=\"token keyword\">@var</span> <span class=\"token class-name\"><span class=\"token keyword\">array</span></span>\n     */</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$message</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$scene</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'edit'</span><span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'email'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</span></code></pre></div>"},"title":"规则验证器"} }],
  ["/posts/article7.html", { loader: () => import(/* webpackChunkName: "article7.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/article7.html.js"), meta: {"_blog":{"title":"User模型","author":"","date":"2024-04-10T00:00:00.000Z","category":["创建模型"],"tag":["api"],"excerpt":"<div class=\"language-php\" data-ext=\"php\" data-title=\"php\"><pre class=\"language-php\"><code>#在app下创建model目录（此目录下创建User模型）\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">app<span class=\"token punctuation\">\\</span>model</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>Model</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Model</span>\n<span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n</span></code></pre></div>"},"title":"User模型"} }],
  ["/posts/article8.html", { loader: () => import(/* webpackChunkName: "article8.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/article8.html.js"), meta: {"_blog":{"title":"创建公共类","author":"","date":"2024-04-10T00:00:00.000Z","category":["基类（公共）"],"tag":["api"],"excerpt":"<div class=\"language-php\" data-ext=\"php\" data-title=\"php\"><pre class=\"language-php\"><code>#controller下创建Base基类\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">app<span class=\"token punctuation\">\\</span>controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>Response</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Base</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">create</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">int</span> <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$type</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token class-name return-type\">Response</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$request</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token comment\">//状态码</span>\n            <span class=\"token string single-quoted-string\">'code'</span><span class=\"token operator\">=&gt;</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">//消息</span>\n            <span class=\"token string single-quoted-string\">'msg'</span><span class=\"token operator\">=&gt;</span><span class=\"token variable\">$msg</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">//数据</span>\n            <span class=\"token string single-quoted-string\">'data'</span><span class=\"token operator\">=&gt;</span><span class=\"token variable\">$data</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//返回api接口</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name static-context\">Response</span><span class=\"token operator\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$arguments</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">,</span><span class=\"token number\">404</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//方法错误</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span></code></pre></div>"},"title":"创建公共类"} }],
  ["/posts/article9.html", { loader: () => import(/* webpackChunkName: "article9.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/article9.html.js"), meta: {"_blog":{"title":"验证器","author":"","date":"2024-04-09T00:00:00.000Z","category":["验证器"],"tag":["扩展"],"excerpt":"<div class=\"language-php\" data-ext=\"php\" data-title=\"php\"><pre class=\"language-php\"><code>#注解验证器（下载）\ncomposer require topthink/think-annotation\n#然后可以直接在控制器类的方法注释中定义，例如：(可以利用IDE生成规范的注释。如果你使用PHPStorm的话，建议安装PHP Annotations插件：https://plugins.jetbrains.com/plugin/7320-php-annotations)\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">app<span class=\"token punctuation\">\\</span>controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>annotation<span class=\"token punctuation\">\\</span>Route</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>annotation<span class=\"token punctuation\">\\</span>route<span class=\"token punctuation\">\\</span>Validate</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">use</span> <span class=\"token package\">app<span class=\"token punctuation\">\\</span>validate<span class=\"token punctuation\">\\</span>IndexValidate</span><span class=\"token punctuation\">;</span> \n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Index</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token doc-comment comment\">/**\n     * @Validate(IndexValidate::class,scene=\"create\",batch=\"true\")\n     * <span class=\"token keyword\">@return</span> <span class=\"token class-name\"><span class=\"token keyword\">mixed</span></span>\n     * @Route(\"hello\")\n     */</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n    \t<span class=\"token keyword\">return</span> <span class=\"token string single-quoted-string\">'helloworld'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n然后需要声明上面引用验证器类，例如：\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">app<span class=\"token punctuation\">\\</span>validate</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>Validate</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">IndexValidate</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Validate</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$rule</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'name'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token string single-quoted-string\">'require'</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">protected</span> <span class=\"token variable\">$message</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n       <span class=\"token string single-quoted-string\">'name.require'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token string single-quoted-string\">'姓名不能为空'</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$scene</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'create'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</span></code></pre></div>"},"title":"验证器"} }],
  ["/posts/jieShaoAnZhuang.html", { loader: () => import(/* webpackChunkName: "jieShaoAnZhuang.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/jieShaoAnZhuang.html.js"), meta: {"_blog":{"title":"介绍及安装","author":"","date":"2024-03-28T00:00:00.000Z","category":[],"tag":[],"excerpt":"<p><strong>01. ThinkPHP6.x</strong> <strong>入门开启</strong></p>\n<p><strong>一．框架简介</strong></p>\n<div class=\"language-TEXT\" data-ext=\"TEXT\" data-title=\"TEXT\"><pre class=\"language-TEXT\"><code>ThinkPHP6.0 发布于 2019 年 10 月 24 日；\nTP 框架是免费开源的、轻量级的、简单快速且敏捷的 PHP 框架；\n你可以免费使用 TP 框架，甚至可以将你的项目商用；\nThinkPHP6.0 要求 PHP 版本是 7.1+以上，官方推荐 7.3；\n如果你的生产环境是 5.6 ~ 7.0 之间，推荐 TP5.1；\n如果你是自己的 vps 服务器，可以安装较高的 PHP 版本 7.1+，推荐 TP6.x；\n集成环境这里采用 windows 结合 wamp，其它系统或环境满足版本要求即可;\n除了 PHP7.1+，还需要开启 PDO 数据库引擎和 MBstring 字符串扩展；\n我在以往的 wamp 版本上添加了一个 PHP7.3.11；（PHP7.4 是 RC）\n</code></pre></div>"},"title":"介绍及安装"} }],
  ["/posts/kuaYu.html", { loader: () => import(/* webpackChunkName: "kuaYu.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/kuaYu.html.js"), meta: {"_blog":{"title":"跨域请求","author":"","date":"2024-04-11T00:00:00.000Z","category":[],"tag":[],"excerpt":"<p>在route文件夹下app.php下配置</p>\n<div class=\"language-ABAP\" data-ext=\"ABAP\" data-title=\"ABAP\"><pre class=\"language-ABAP\"><code>**解决跨域问题\nheader('Content-Type: text/html;charset=utf-8');\nheader('Access-Control-Allow-Origin:*'); // *代表允许任何网址请求\nheader('Access-Control-Allow-Methods:POST,GET,OPTIONS,DELETE,PUT'); // 允许请求的类型\nheader('Access-Control-Allow-Credentials: true'); // 设置是否允许发送 cookies\nheader('Access-Control-Allow-Headers: Content-Type,Content-Length,Accept-Encoding,X-Requested-with, Origin'); // 设置允许自定义请求头的字段\n</code></pre></div>"},"title":"跨域请求"} }],
  ["/posts/plugin.html", { loader: () => import(/* webpackChunkName: "plugin.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/plugin.html.js"), meta: {"_blog":{"title":"扩展","author":"","date":"2024-04-05T00:00:00.000Z","category":[],"tag":[],"excerpt":"<p>多应用模式</p>\n<div class=\"language-php\" data-ext=\"php\" data-title=\"php\"><pre class=\"language-php\"><code>composer <span class=\"token keyword\">require</span> topthink<span class=\"token operator\">/</span>think<span class=\"token operator\">-</span>multi<span class=\"token operator\">-</span>app\n</code></pre></div>"},"title":"扩展"} }],
  ["/posts/", { loader: () => import(/* webpackChunkName: "index.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/index.html.js"), meta: {"_blog":{"title":"资源控制器","author":"","date":"2024-03-29T00:00:00.000Z","category":[],"tag":[],"excerpt":"<p>只用于接口开发</p>\n<div class=\"language-php\" data-ext=\"php\" data-title=\"php\"><pre class=\"language-php\"><code>php think make<span class=\"token punctuation\">:</span>controller index@Blog <span class=\"token operator\">--</span>api\n<span class=\"token comment\">//在route下的app.php注册</span>\n<span class=\"token class-name static-context\">Route</span><span class=\"token operator\">::</span><span class=\"token function\">resource</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'blog'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'Blog'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"},"title":"资源控制器"} }],
  ["/posts/restful.html", { loader: () => import(/* webpackChunkName: "restful.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/restful.html.js"), meta: {"_blog":{"title":"restful状态码","author":"","date":"2024-03-29T00:00:00.000Z","category":[],"tag":[],"excerpt":"<div class=\"language-text\" data-ext=\"text\" data-title=\"text\"><pre class=\"language-text\"><code>常用状态码\n200 OK：请求成功，返回的数据符合预期。\n404 Not Found：请求的资源不存在，返回空数据。\n401 Unauthorized：身份验证失败，未授权访问资源。\n403 Forbidden：授权失败，禁止访问资源。\n500 Internal Server Error：服务器内部错误，无法完成请求。\n</code></pre></div>"},"title":"restful状态码"} }],
  ["/posts/route.html", { loader: () => import(/* webpackChunkName: "route.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/route.html.js"), meta: {"_blog":{"title":"路由","author":"","date":"2024-04-02T00:00:00.000Z","category":[],"tag":[],"excerpt":"<p>定义路由</p>\n<div class=\"language-php\" data-ext=\"php\" data-title=\"php\"><pre class=\"language-php\"><code><span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>facade<span class=\"token punctuation\">\\</span>Route</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"},"title":"路由"} }],
  ["/posts/sticky.html", { loader: () => import(/* webpackChunkName: "sticky.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/sticky.html.js"), meta: {"_blog":{"title":"","author":"","date":null,"category":[],"tag":[],"excerpt":""},"title":""} }],
  ["/posts/sticky2.html", { loader: () => import(/* webpackChunkName: "sticky2.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/sticky2.html.js"), meta: {"_blog":{"title":"图像处理","author":"","date":"2024-4-09","category":["处理"],"tag":["处理"],"excerpt":"<p>#图像处理</p>\n<div class=\"language-php\" data-ext=\"php\" data-title=\"php\"><pre class=\"language-php\"><code>composer <span class=\"token keyword\">require</span> topthink<span class=\"token operator\">/</span>think<span class=\"token operator\">-</span>image\n引入进来之后，首先创建图像处理对象；\n\n<span class=\"token variable\">$image</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">Image</span><span class=\"token operator\">::</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'image.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//图片宽度</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$image</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//图片高度</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$image</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//图片类型</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$image</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//图片 mime</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$image</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">mime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//图片大小</span>\n<span class=\"token function\">dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$image</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">#使用 crop()方法可以裁剪图片，并使用 save()方法保存到指定路径；</span>\n使用 <span class=\"token function\">thumb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法，可以生成缩略图，配合 <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>把缩略图保存下来；\n\n<span class=\"token comment\">//裁剪图片</span>\n<span class=\"token variable\">$image</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">crop</span><span class=\"token punctuation\">(</span><span class=\"token number\">550</span><span class=\"token punctuation\">,</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'crop1.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//生成缩略图</span>\n<span class=\"token variable\">$image</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">thumb</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'thumb1.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n使用 <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法，可以旋转图片，默认是 <span class=\"token number\">90</span> 度，参数可以设置；\n<span class=\"token variable\">$image</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">180</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'rotate1.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">11.</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法可以配置的参数除了保存文件名的路径，还有以下几个：\n<span class=\"token number\">12.</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'路径'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'类型'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'质量'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'是否隔行扫描'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>，追踪到方法查看；\n<span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pathname</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$type</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$quality</span> <span class=\"token operator\">=</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$interlace</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">13.</span> <span class=\"token function\">water</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法，可以给图片增加一个图片水印，默认位置为右下角，可看源码常量；\n<span class=\"token variable\">$image</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">water</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'mr.lee.png'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'water1.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">14.</span> <span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法，可以给图片增加一个文字水印，具体如下：\n<span class=\"token variable\">$image</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Mr.Lee'</span><span class=\"token punctuation\">,</span><span class=\"token function\">getcwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'/1.ttf'</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'#ffffff'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'text1.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"},"title":"图像处理"} }],
  ["/posts/zhongJianJian.html", { loader: () => import(/* webpackChunkName: "zhongJianJian.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/posts/zhongJianJian.html.js"), meta: {"_blog":{"title":"中间件","author":"","date":"2024-04-01T00:00:00.000Z","category":[],"tag":[],"excerpt":"<p>中间件</p>\n<div class=\"language-php\" data-ext=\"php\" data-title=\"php\"><pre class=\"language-php\"><code>php think make<span class=\"token punctuation\">:</span>middleware Check\n</code></pre></div>"},"title":"中间件"} }],
  ["/404.html", { loader: () => import(/* webpackChunkName: "404.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/404.html.js"), meta: {"title":""} }],
  ["/category/", { loader: () => import(/* webpackChunkName: "index.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/category/index.html.js"), meta: {"title":"Categories"} }],
  ["/category/%E6%8E%A5%E5%8F%A3/", { loader: () => import(/* webpackChunkName: "index.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/category/接口/index.html.js"), meta: {"title":"Category 接口"} }],
  ["/category/%E5%A4%84%E7%90%86/", { loader: () => import(/* webpackChunkName: "index.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/category/处理/index.html.js"), meta: {"title":"Category 处理"} }],
  ["/category/%E6%89%93%E5%8C%85/", { loader: () => import(/* webpackChunkName: "index.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/category/打包/index.html.js"), meta: {"title":"Category 打包"} }],
  ["/category/%E9%AA%8C%E8%AF%81%E5%99%A8/", { loader: () => import(/* webpackChunkName: "index.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/category/验证器/index.html.js"), meta: {"title":"Category 验证器"} }],
  ["/category/%E5%88%9B%E5%BB%BA%E6%A8%A1%E5%9E%8B/", { loader: () => import(/* webpackChunkName: "index.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/category/创建模型/index.html.js"), meta: {"title":"Category 创建模型"} }],
  ["/category/%E5%9F%BA%E7%B1%BB%EF%BC%88%E5%85%AC%E5%85%B1%EF%BC%89/", { loader: () => import(/* webpackChunkName: "index.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/category/基类（公共）/index.html.js"), meta: {"title":"Category 基类（公共）"} }],
  ["/tag/", { loader: () => import(/* webpackChunkName: "index.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/tag/index.html.js"), meta: {"title":"Tags"} }],
  ["/tag/api/", { loader: () => import(/* webpackChunkName: "index.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/tag/api/index.html.js"), meta: {"title":"Tag api"} }],
  ["/tag/%E5%A4%84%E7%90%86/", { loader: () => import(/* webpackChunkName: "index.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/tag/处理/index.html.js"), meta: {"title":"Tag 处理"} }],
  ["/tag/vue%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85/", { loader: () => import(/* webpackChunkName: "index.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/tag/vue项目打包/index.html.js"), meta: {"title":"Tag vue项目打包"} }],
  ["/tag/%E6%89%A9%E5%B1%95/", { loader: () => import(/* webpackChunkName: "index.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/tag/扩展/index.html.js"), meta: {"title":"Tag 扩展"} }],
  ["/article/", { loader: () => import(/* webpackChunkName: "index.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/article/index.html.js"), meta: {"title":"Articles"} }],
  ["/timeline/", { loader: () => import(/* webpackChunkName: "index.html" */"C:/Users/86189/Downloads/vuepress-starter/docs/.vuepress/.temp/pages/timeline/index.html.js"), meta: {"title":"Timeline"} }],
]);
