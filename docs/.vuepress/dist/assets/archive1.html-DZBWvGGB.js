import{_ as n,o as s,c as a,a as t}from"./app-DMZOAs2V.js";const p={},e=t(`<div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code>如果你想更改异常页面的样式、布局之类的，可以修改这个页面：
vendor<span class="token operator">/</span>topthink<span class="token operator">/</span>framework<span class="token operator">/</span>src<span class="token operator">/</span>tpl<span class="token operator">/</span>think_exception<span class="token operator">.</span>tpl
<span class="token number">3.</span> 如果你想要直接替换掉异常页面，换成别的，可以在 app<span class="token operator">.</span>php 中进行设置：
<span class="token comment">// 异常页面的模板文件</span>
<span class="token string single-quoted-string">&#39;exception_tmpl&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">app</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getThinkPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;tpl/think_exception.tpl&#39;</span><span class="token punctuation">,</span> <span class="token number">4.</span> 系统的异常抛出是自动进行的，并不需要你手动抛出，但也支持手动；
<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;异常消息&#39;</span><span class="token punctuation">,</span> <span class="token number">10086</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">5.</span> 我们可以使用 <span class="token keyword">try</span><span class="token operator">...</span><span class="token keyword">catch</span> 对可能发生的异常进行手动捕获或抛出；
<span class="token keyword">try</span> <span class="token punctuation">{</span>
<span class="token keyword">echo</span> <span class="token number">0</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ErrorException</span> <span class="token variable">$e</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
<span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;发生错误：&#39;</span><span class="token operator">.</span><span class="token variable">$e</span><span class="token operator">-&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token number">6.</span> 我们可以抛出 <span class="token constant">HTTP</span> 异常，所谓 <span class="token constant">HTTP</span> 异常比如 <span class="token number">404</span> 错误，<span class="token number">500</span> 错误之类；
<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">HttpException</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;页面不存在&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">7.</span> 系统提供了一个助手函数 <span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>方法简化 <span class="token constant">HTTP</span> 异常抛出；
<span class="token function">abort</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;页面不存在&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">8.</span> 如果系统关闭了调试模式，进入部署环境下，可以设置 <span class="token constant">HTTP</span> 错误页面，比如 <span class="token number">404</span>；
<span class="token string single-quoted-string">&#39;http_exception_template&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
<span class="token comment">// 定义 404 错误的模板文件地址</span>
<span class="token number">404</span> <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>think<span class="token punctuation">\\</span>facade<span class="token punctuation">\\</span>App</span><span class="token operator">::</span><span class="token function">getAppPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;404.html&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),o=[e];function c(l,i){return s(),a("div",null,o)}const u=n(p,[["render",c],["__file","archive1.html.vue"]]),r=JSON.parse(`{"path":"/posts/archive1.html","title":"异常处理","lang":"en-US","frontmatter":{"title":"异常处理","date":"2024-04-10T00:00:00.000Z","category":["处理"],"tag":["处理"],"archive":true},"headers":[],"git":{},"filePathRelative":"posts/archive1.md","excerpt":"<div class=\\"language-php\\" data-ext=\\"php\\" data-title=\\"php\\"><pre class=\\"language-php\\"><code>如果你想更改异常页面的样式、布局之类的，可以修改这个页面：\\nvendor<span class=\\"token operator\\">/</span>topthink<span class=\\"token operator\\">/</span>framework<span class=\\"token operator\\">/</span>src<span class=\\"token operator\\">/</span>tpl<span class=\\"token operator\\">/</span>think_exception<span class=\\"token operator\\">.</span>tpl\\n<span class=\\"token number\\">3.</span> 如果你想要直接替换掉异常页面，换成别的，可以在 app<span class=\\"token operator\\">.</span>php 中进行设置：\\n<span class=\\"token comment\\">// 异常页面的模板文件</span>\\n<span class=\\"token string single-quoted-string\\">'exception_tmpl'</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token function\\">app</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">getThinkPath</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">.</span> <span class=\\"token string single-quoted-string\\">'tpl/think_exception.tpl'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">4.</span> 系统的异常抛出是自动进行的，并不需要你手动抛出，但也支持手动；\\n<span class=\\"token keyword\\">throw</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Exception</span><span class=\\"token punctuation\\">(</span><span class=\\"token string single-quoted-string\\">'异常消息'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">10086</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token number\\">5.</span> 我们可以使用 <span class=\\"token keyword\\">try</span><span class=\\"token operator\\">...</span><span class=\\"token keyword\\">catch</span> 对可能发生的异常进行手动捕获或抛出；\\n<span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">echo</span> <span class=\\"token number\\">0</span><span class=\\"token operator\\">/</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ErrorException</span> <span class=\\"token variable\\">$e</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">echo</span> <span class=\\"token string single-quoted-string\\">'发生错误：'</span><span class=\\"token operator\\">.</span><span class=\\"token variable\\">$e</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">getMessage</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token number\\">6.</span> 我们可以抛出 <span class=\\"token constant\\">HTTP</span> 异常，所谓 <span class=\\"token constant\\">HTTP</span> 异常比如 <span class=\\"token number\\">404</span> 错误，<span class=\\"token number\\">500</span> 错误之类；\\n<span class=\\"token keyword\\">throw</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">HttpException</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">404</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string single-quoted-string\\">'页面不存在'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token number\\">7.</span> 系统提供了一个助手函数 <span class=\\"token function\\">abort</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>方法简化 <span class=\\"token constant\\">HTTP</span> 异常抛出；\\n<span class=\\"token function\\">abort</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">404</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string single-quoted-string\\">'页面不存在'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token number\\">8.</span> 如果系统关闭了调试模式，进入部署环境下，可以设置 <span class=\\"token constant\\">HTTP</span> 错误页面，比如 <span class=\\"token number\\">404</span>；\\n<span class=\\"token string single-quoted-string\\">'http_exception_template'</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">[</span>\\n<span class=\\"token comment\\">// 定义 404 错误的模板文件地址</span>\\n<span class=\\"token number\\">404</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token class-name class-name-fully-qualified static-context\\"><span class=\\"token punctuation\\">\\\\</span>think<span class=\\"token punctuation\\">\\\\</span>facade<span class=\\"token punctuation\\">\\\\</span>App</span><span class=\\"token operator\\">::</span><span class=\\"token function\\">getAppPath</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">.</span> <span class=\\"token string single-quoted-string\\">'404.html'</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">]</span>\\n</code></pre></div>"}`);export{u as comp,r as data};
